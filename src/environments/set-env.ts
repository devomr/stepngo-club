import { writeFile } from 'fs';
import yargs from 'yargs';
import dotenv from 'dotenv';

dotenv.config({
  path: 'src/environments/.env',
});

// Define command-line options
const argv = yargs(process.argv.slice(2))
  .options({
    env: { type: 'string', default: 'dev' },
  })
  .parseSync();

function writeFileUsingFS(path: string, content: string) {
  writeFile(path, content, function (err) {
    if (err) {
      console.log(err);
    }
    if (content !== '') {
      console.log(`wrote variables to ${path}`);
    }
  });
}

// Providing path to the `environments` directory
const envDirectory = './src/environments';

// creates `environment.ts` file if it does not exist
writeFileUsingFS(`${envDirectory}/environment.ts`, '');

// Checks whether command line argument of `prod` was provided signifying production mode
const isProduction = argv.env === 'prod';
const isLocal = argv.env === 'local';
const domainUrl = isLocal
  ? 'http://localhost:4200'
  : process.env['APP_DOMAIN_URL'];

// actual content to be compiled dynamically and pasted into respective environment file
const environmentFileContent = `
// This file was autogenerated by dynamically running set-env.ts and using dotenv for managing API key secrecy
export const environment = {
  production: ${isProduction},
  useEmulators: ${isLocal},
  appName: '${process.env['APP_NAME']}',
  appDomainUrl: '${domainUrl}',
  firebase: ${process.env['FIREBASE_CONFIG']}
};`;

// appending data into the target file
writeFileUsingFS(`${envDirectory}/environment.ts`, environmentFileContent);
